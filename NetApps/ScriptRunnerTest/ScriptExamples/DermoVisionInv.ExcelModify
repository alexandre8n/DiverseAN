// file should have the extention: .excelModify
IsActive: true

// FromFolder: can be one or several folders, in this case the files of this task will be searched
FromFolder: {exe}\DermoVisionReports
FromFolderPattern: \w\w\.VPro\.Timebooking report {EndOfThisWeekDate}.xlsx
OutputFileTemplateFolder: {exe}\DermoVisionReports
OutputFileTemplatePattern: DermoVisionInv.xlsx
OutputFileToFolder: {exe}\DermoVisionReports
OutputFileName: NGSA-Inv-{EndOfThisWeekDate}.xlsx

// if in ToFolder folder there are any files matching pattern, move them to this archive folder
// if ArciveFolder is not specified or empty -> no archiving will be done

ArciveFolder: {exe}\archiv  

// supported expression {Date}, {EndOfThisWeekDate}, {TodayDate}, {EndOfThisMonthDate}
// {EndOfThisWeekDate} = YYYY-MM-DD 
// example for file: SM.VPro.Timebooking report 2024-02-25.xlsx -> \w\w\.VPro\.Timebooking report {EndOfThisWeekDate}.xlsx
// FilePattern can alse be specified several times, it means for all specified matching files will be considered
// Example:
// FilePattern: {Date}*.*
// FilePattern: \w\w\.ProjName\.Timebooking report {EndOfThisWeekDate}.xlsx

// Processing of input files and creation of output file:
<script>
var Memory = createObject("Dictionary");
var wrkSheet = 0;
for(file in _FromFiles){
	var name = file.getFileName().Left(2)
	var of = openXlsFile(file)
	var iRow = of.findRowNumber( wrkSheet, 1, 4, "Total hours", 100)
	var totalHours = of.getCellValue(wrkSheet, iRow, 4+1)
	Memory.add(name, totalHours);
	of.close()
}

var outf = openXlsFile(_OutputFile)
var iRowStart = outf.findRowNumber(wrkSheet, 10, 1, "RegExp:^VPro - \w\w", 100)
for(var name in Memory.Keys()){
	var iRowOfDev = outf.findRowNumber(wrkSheet, iRowStart, 1, "VPro - "+name, 100)
	var totalHours =Memory[name];
	outf.setCellVal(wrkSheet, iRowOfDev, 7, totalHours)
}
outf.save()
outf.close()
</script>


<script>
var fmTask = createObject("Dictionary");
var fm = createObject("FileMover");
fmTask.FromFolders = 
"C:\Users\Alex\Dropbox\Projects\AppVpro-AnarGorkhmaz\VproDev\AC-VPro;"+
"C:\Users\Alex\Dropbox\Projects\AppVpro-AnarGorkhmaz\VproDev\SM-VPro";
fmTask.FromFilePatterns = "RegExp:\w\w\.VPro\.Timebooking report {EndOfThisWeekDate}.xlsx;"+
"NG.SoftwareAces.YYYY-MM-DD-VproDev_InvoiceTemplate.xlsx";
fmTask.ToFolders = "{exe}\DermoVisionReports";

fm.run(fmTask);

var FromFiles = fmTask.ListOfMovedFiles;
fmTask.Clear();
fmTask.FromFolders = "{exe}\DermoVisionReports";
fmTask.Rename = "RegEx:DermoVision(Inv).(xlsx) -> NGSA-($1)-{EndOfThisWeekDate}($2);";
fm.run(fmTask);
var OutputFile = fmTask.RenamedFiles[0];

var Memory = createObject("Dictionary");
var wrkSheet = 0;
for(var file in FromFiles){
	var name = file.getFileName().Left(2)
	var of = openXlsFile(file)
	var iRow = of.findRowNumber( wrkSheet, 1, 4, "Total hours", 100)
	var totalHours = of.getCellValue(wrkSheet, iRow, 4+1)
	Memory.add(name, totalHours);
	of.close()
}
var outf = openXlsFile(OutputFile)
var iRowStart = outf.findRowNumber(wrkSheet, 10, 1, "RegExp:^VPro - \w\w", 100)
for(var name in Memory.Keys()){
	var iRowOfDev = outf.findRowNumber(wrkSheet, iRowStart, 1, "VPro - "+name, 100)
	var totalHours =Memory[name];
	outf.setCellVal(wrkSheet, iRowOfDev, 7, totalHours)
}
outf.save()
outf.close()
</script>
